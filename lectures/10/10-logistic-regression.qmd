---
title: Logistic regression
subtitle: Lecture 10
format: revealjs
auto-stretch: false
editor_options: 
  chunk_output_type: console
---

# Warm up

## Check-in

-   Daily check-ins for getting you thinking at the beginning of the class and reviewing recent/important concepts
-   Go to Canvas and open today's "quiz" titled `2023-10-09 Check-in`
-   Access code: `___` (released in class) <!-- slopes -->
-   "Graded" for completion

## Project

-   Project workday on Friday in lab -- use this time for finalizing and polishing, not getting started

-   Projects due Friday at 5 pm

-   Peer evaluations due Friday at 6 pm:

    -   You'll receive an email about them later today from TEAMMATES

    -   You must turn in a peer evaluation to get the points your teammates awarded you

-   Only one person should submit the project on Gradescope and select all team members' names. See <https://sta101-f23.github.io/project/project-1.html#submission> for more information.

::: task
Any questions about projects?
:::

# Logistic regression

## So far in regression

::: incremental
-   Outcome: Numerical, Predictor: One numerical or one categorical with only two levels $\rightarrow$ Simple linear regression

-   Outcome: Numerical, Predictors: Any number of numerical or categorical variables with any number of levels $\rightarrow$ Multiple linear regression

-   Outcome: Categorical with only two levels, Predictors: Any number of numerical or categorical variables with any number of levels $\rightarrow$ Logistic regression

-   Outcome: Categorical with any number of levels, Predictors: Any number of numerical or categorical variables with any number of levels $\rightarrow$ Generalized linear models -- Not covered in STA 101
:::

## Data + packages

```{r}
#| label: load-data-packages
#| message: false

library(tidyverse)
library(tidymodels)

hp_spam <- read_csv("data/hp-spam.csv")
```

-   `r nrow(hp_spam)` emails collected at Hewlett-Packard labs and contains `r ncol(hp_spam)` variables

-   Outcome: `type`

    -   `type = 1` is spam

    -   `type = 0` is non-spam

-   Predictors of interest:

    -   `capitalTotal`: Number of capital letters in email

    -   Percentages are calculated as (100 \* number of times the WORD appears in the e-mail) / total number of words in email

        -   `george`: Percentage of "george"s in email (these were George's emails)

        -   `you`: Percentage of "you"s in email

## Glimpse at data

::: task
What type of data is `type`? What type should it be in order to use logistic regression?
:::

```{r}
hp_spam |>
  select(type, george, capitalTotal, you)
```

## EDA: How much spam?

```{r}
hp_spam |>
  count(type) |>
  mutate(p = n / sum(n))
```

## EDA: AM I SCREAMING? `capitalTotal`

```{r}
#| fig-width: 8
#| fig-asp: 0.618

ggplot(hp_spam, aes(x = capitalTotal)) +
  geom_histogram()
```

## EDA: `george`, is that `you`?

```{r}
#| layout-ncol: 2
#| fig-width: 5
#| fig-asp: 0.618

ggplot(hp_spam, aes(x = george)) +
  geom_histogram()
ggplot(hp_spam, aes(x = you)) +
  geom_histogram()
```

## Logistic regression

-   Logistic regression takes in a number of predictors and outputs the probability of a "success" (an outcome of 1) in a **binary** outcome variable.

-   The probability is related to the predictors via a **sigmoid link function**, $$
    p(y_i = 1) = \frac{1}{1+\text{exp}({- \sum \beta_i x_i })},
    $$whose output is in $(0,1)$ (a probability).

-   In this modeling scheme, one typically finds $\hat{\beta}$ by maximizing the **likelihood function**, another objective function, different than our previous "least squares" objective.

## Logistic regression, visualized

```{r}
#| echo: false

sigmoid = function(x) 1 / (1 + exp(-x + 10))
plot.function(sigmoid, from = 0, to = 20, n = 101, ylab="p(yi = 1)", xlab="input", main="Sigmoid link function", lwd = 3)
box()
```

## Using data to estimate $\beta_i$

To proceed with building our email classifier, we will, as usual, use our data (outcome $y_i$ and predictor $x_i$ pairs), to estimate $\beta$ (find $\hat{\beta}$) and obtain the model: $$
p(y_i = 1) = \frac{1}{1+\text{exp}({- \sum  \hat{\beta}_i x_i})},
$$

## Application exercise

Go to Posit Cloud and continue the project titled ae-09-Spam.

::: callout-note
## ICYMI

Today's daily check-in access code: `___` (released in class) <!-- slopes -->
:::
