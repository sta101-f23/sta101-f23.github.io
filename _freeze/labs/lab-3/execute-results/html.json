{
  "hash": "0600faaa39cf7e08277cce4eea96d1ba",
  "result": {
    "markdown": "---\ntitle: \"Lab 3\"\n---\n\n\nThe goal of this lab is to effectively visualize numerical and categorical data.\n\nFor all visualizations you create, be sure to include informative titles for the plot, axes, and legend!\n\n# Getting started\n\n1.  Go to [Posit Cloud](https://posit.cloud/spaces/405361) and start the project titled **lab-3 - Exploratory data analysis**.\n\n2.  Under the *Files* tab on the lower right, click on `lab-3.qmd` to open the lab template.\n\n3.  Complete the exercises in this document.\n\n# Packages\n\nIn this lab we will work with the tidyverse packages, which is a collection of packages for doing data analysis in a \"tidy\" way.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n```\n:::\n\n\n# Part 1: Nobel laurates\n\nThe dataset for this lab can be found in `nobel.csv` file in the `data` folder of your repository. You can read it in using the following.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel <- read_csv(\"data/nobel.csv\")\n```\n:::\n\n\nThe descriptions of the variables are as follows:\n\n1.  `id`: ID number\n2.  `firstname`: First name of laureate\n3.  `surname`: Surname\n4.  `year`: Year prize won\n5.  `category`: Category of prize\n6.  `affiliation`: Affiliation of laureate\n7.  `city`: City of laureate in prize year\n8.  `country`: Country of laureate in prize year\n9.  `born_date`: Birth date of laureate\n10. `died_date`: Death date of laureate\n11. `gender`: Gender of laureate\n12. `born_city`: City where laureate was born\n13. `born_country`: Country where laureate was born\n14. `born_country_code`: Code of country where laureate was born\n15. `died_city`: City where laureate died\n16. `died_country`: Country where laureate died\n17. `died_country_code`: Code of country where laureate died\n18. `overall_motivation`: Overall motivation for recognition\n19. `share`: Number of other winners award is shared with\n20. `motivation`: Motivation for recognition\n\nIn a few cases the name of the city/country changed after laureate was given (e.g. in 1975 Bosnia and Herzegovina was called the Socialist Federative Republic of Yugoslavia). In these cases the variables below reflect a different name than their counterparts without the suffix `_original`.\n\n21. `born_country_original`: Original country where laureate was born\n22. `born_city_original`: Original city where laureate was born\n23. `died_country_original`: Original country where laureate died\n24. `died_city_original`: Original city where laureate died\n25. `city_original`: Original city where laureate lived at the time of winning the award\n26. `country_original`: Original country where laureate lived at the time of winning the award\n\n## Exercise 1\n\n::: exercise\nHow many observations and how many variables are in the dataset? Use inline code to answer this question. What does each row represent?\n:::\n\n## Exercise 2\n\nThere are some observations in this dataset that we will exclude from our analysis to match the Buzzfeed results.\n\n::: exercise\nCreate a new data frame called `nobel_living` that filters for\n\n-   laureates for whom `country` is available: `!is.na(country)`\n-   laureates who are people as opposed to organizations, i.e., organizations are denoted with `\"org\"` as their `gender`: `gender != \"org\"`\n-   laureates who are still alive, i.e., their `died_date` is `NA`: `is.na(died_date)`\n\n\n::: {.cell}\n\n:::\n\n\nConfirm that once you have filtered for these characteristics you are left with a data frame with 228 observations, once again using inline code.\n:::\n\n<br>\n\n> Most living Nobel laureates were based in the US when they won their prizes\n\n... says the Buzzfeed article. Let's see if that's true.\n\nFirst, we'll create a new variable to identify whether the laureate was in the US when they won their prize. We'll use the `mutate()` function for this. The following pipeline mutates the `nobel_living` data frame by adding a new variable called `country_us`. We use an if statement to create this variable. The first argument in the `if_else()` function we're using to write this if statement is the condition we're testing for. If `country` is equal to `\"USA\"`, we set `country_us` to `\"USA\"`. If not, we set the `country_us` to `\"Other\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_living <- nobel_living |>\n  mutate(\n    country_us = if_else(country == \"USA\", \"USA\", \"Other\")\n  )\n```\n:::\n\n\nNext, we will limit our analysis to only the following categories: Physics, Medicine, Chemistry, and Economics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_living_science <- nobel_living |>\n  filter(category %in% c(\"Physics\", \"Medicine\", \"Chemistry\", \"Economics\"))\n```\n:::\n\n\nFor the following exercises, work with the `nobel_living_science` data frame you created above. This means you'll need to define this data frame in your Quarto document, even though the next exercise doesn't explicitly ask you to do so.\n\n## Exercise 3\n\n::: exercise\nCreate a faceted bar plot visualizing the relationship between the category of prize and whether the laureate was in the US when they won the nobel prize. Interpret your visualization, and say a few words about whether the Buzzfeed headline is supported by the data.\n\n-   Your visualization should be faceted by category.\n-   For each facet you should have two bars, one for winners in the US and one for Other.\n-   Flip the coordinates so the bars are horizontal, not vertical.\n:::\n\n## Exercise 4\n\nNext, let's investigate, of those US-based Nobel laureates, what proportion were born in other countries.\n\n::: exercise\nCreate a new variable called `born_country_us` in `nobel_living_science` that has the value `\"USA\"` if the laureate is born in the US, and `\"Other\"` otherwise. How many of the winners are born in the US?\n:::\n\n## Exercise 5\n\n::: exercise\nAdd a second variable to your visualization from Exercise 3 based on whether the laureate was born in the US or not.\n\nCreate two visualizations with this new variable added:\n\n-   Plot 1: Segmented frequency bar plot\n-   Plot 2: Segmented relative frequency bar plot (*Hint:* Add `position = \"fill\"` to `geom_bar()`.)\n\nHere are some instructions that apply to both of these visualizations:\n\n-   Your final visualization should contain a facet for each category.\n-   Within each facet, there should be two bars for whether the laureate won the award in the US or not.\n-   Each bar should have segments for whether the laureate was born in the US or not.\n\nWhich of these visualizations is a better fit for answering the following question: \"Do the data appear to support Buzzfeed's claim that of those US-based Nobel laureates, many were born in other countries?\" First, state which plot you're using to answer the question. Then, answer the question, explaining your reasoning in 1-2 sentences.\n:::\n\n## Exercise 6\n\n::: exercise\nIn a single pipeline, filter the `nobel_living_science` data frame for laureates who won their prize in the US, but were born outside of the US, and then create a frequency table (with the `count()` function) for their birth country (`born_country`) and arrange the resulting data frame in descending order of number of observations for each country. Which country is the most common?\n:::\n\n# Part 2: IMS Exercises\n\nThe exercises in this section do not require code. Make sure to answer the questions in full sentences.\n\n## Exercise 7\n\n::: exercise\nIMS - [Chapter 4 exercises](https://openintro-ims2.netlify.app/04-explore-categorical#chp4-exercises), #4: Raise taxes.\n:::\n\n## Exercise 8\n\n::: exercise\nIMS - [Chapter 5 exercises](https://openintro-ims2.netlify.app/05-explore-numerical#chp5-exercises), #4: Office productivity.\n:::\n\n## Exercise 9\n\n::: exercise\nIMS - [Chapter 5 exercises](https://openintro-ims2.netlify.app/05-explore-numerical#chp5-exercises), #16: Distributions and appropriate statistics.\n:::\n\n## Exercise 10\n\n::: exercise\nIMS - [Chapter 5 exercises](https://openintro-ims2.netlify.app/05-explore-numerical#chp5-exercises), #26: NYC marathon winners.\n:::\n\n# Wrap up\n\n## Submitting\n\n::: callout-important\nBefore you proceed, first, make sure that you have updated the document YAML with your name! Then, render your document one last time, for good measure.\n:::\n\nTo submit your assignment to Gradescope:\n\n-   Go to your Files pane and check the box next to the PDF output of your document (`lab-3.pdf`).\n\n-   Then, in the Files pane, go to More \\> Export. This will download the PDF file to your computer. Save it somewhere you can easily locate, e.g., your Downloads folder or your Desktop.\n\n-   Go to the course Canvas page and click on Gradescope and then click on the assignment. You'll be prompted to submit it.\n\n-   Mark the pages associated with each exercise. All of the papers of your lab should be associated with at least one question (i.e., should be \"checked\").\n\n::: callout-warning\nIf you fail to mark the pages associated with an exercise, that exercise won't be graded. This means, if you fail to mark the pages for all exercises, you will receive a 0 on the assignment. The TAs can't mark your pages for you, and for them to be able to grade, you must mark them.\n:::\n\n## Grading\n\n| Exercise    | Points |\n|-------------|--------|\n| Exercise 1  | 3      |\n| Exercise 2  | 4      |\n| Exercise 3  | 8      |\n| Exercise 4  | 6      |\n| Exercise 5  | 8      |\n| Exercise 6  | 8      |\n| Exercise 7  | 2      |\n| Exercise 8  | 2      |\n| Exercise 9  | 5      |\n| Exercise 10 | 4      |\n| **Total**   | 50     |\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}