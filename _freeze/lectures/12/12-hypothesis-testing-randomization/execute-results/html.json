{
  "hash": "b7ec329d206b6e804cfa038ca9e2fa38",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Hypothesis testing with randomization\nsubtitle: Lecture 12\nformat: revealjs\nauto-stretch: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Warm up\n\n## Announcements\n\n-   Midterm grades posted on DukeHub for everyone\n\n-   My office hours this week by appointment, next week 10-11 am on Zoom and by appointment (no Tuesday office hours for me either week)\n\n# Hypothesis testing\n\n## Hypothesis testing\n\nA hypothesis test is a statistical technique used to evaluate *competing claims* using data.\n\n-   **Null hypothesis,** $H_o$: An assumption about the population. \"There is nothing going on.\"\n\n-   **Alternative hypothesis,** $H_A$: A research question about the population. \"There is something going on\".\n\n::: callout-note\nHypotheses are always at the population level!\n:::\n\n## Populations vs. samples\n\nSuppose you're cooking a pot of soup:\n\n::: incremental\n-   Taste a spoonful and decide if that spoonful has enough salt $\\rightarrow$ exploratory data analysis of the sample\n\n-   Decide the pot of soup must also have enough salt since the spoonful does $\\rightarrow$ inference\n\n-   Mixing the soup in the pot before taking a spoonful $\\rightarrow$ randomizing\n\n-   Taking a spoonful with the intention of making an inference about the pot $\\rightarrow$ sampling\n:::\n\n## Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.4     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.8     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(openintro)  # for data for case study 2: yawn\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: airports\nLoading required package: cherryblossom\nLoading required package: usdata\n\nAttaching package: 'openintro'\n\nThe following object is masked from 'package:modeldata':\n\n    ames\n```\n\n\n:::\n:::\n\n\n\n# Case study 1: Donors\n\n## Organ donors\n\nPeople providing an organ for donation sometimes seek the help of a special \"medical consultant\". These consultants assist the patient in all aspects of the surgery, with the goal of reducing the possibility of complications during the medical procedure and recovery. Patients might choose a consultant based in part on the historical complication rate of the consultant's clients.\n\nOne consultant tried to attract patients by noting that the average complication rate for liver donor surgeries in the US is about 10%, but her clients have only had 3 complications in the 62 liver donor surgeries she has facilitated. She claims this is strong evidence that her work meaningfully contributes to reducing complications (and therefore she should be hired!).\n\n## Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\norgan_donor <- read_csv(\"data/organ-donor.csv\")\n\norgan_donor |>\n  count(outcome)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  outcome             n\n  <chr>           <int>\n1 complication        3\n2 no complication    59\n```\n\n\n:::\n:::\n\n\n\n## Parameter vs. statistic\n\nA **parameter** for a hypothesis test is the \"true\" value of interest. We typically estimate the parameter using a **sample statistic** as a **point estimate**.\n\n$p~$: true rate of complication\n\n$\\hat{p}~$: rate of complication in the sample = $\\frac{3}{62}$ = 0.048\n\n## Correlation vs. causation\n\n::: task\nIs it possible to assess the consultant's claim using the data?\n:::\n\n. . .\n\nNo. The claim is that there is a causal connection, but the data are observational. For example, maybe patients who can afford a medical consultant can afford better medical care, which can also lead to a lower complication rate.\n\nWhile it is not possible to assess the causal claim, it is still possible to test for an *association* using these data. For this question we ask, could the low complication rate of $\\hat{p}$ = 0.048 be due to chance?\n\n## Two claims\n\n-   **Null hypothesis:** \"There is nothing going on\"\n\nComplication rate for this consultant is no different than the US average of 10%\n\n. . .\n\n-   **Alternative hypothesis:** \"There is something going on\"\n\nComplication rate for this consultant is **different** than the US average of 10%\n\n## Hypothesis testing as a court trial\n\n-   **Hypotheses:**\n\n    -   **Null hypothesis**, $H_0$: Defendant is innocent\n\n    -   **Alternative hypothesis**, $H_A$: Defendant is guilty\n\n. . .\n\n-   **Present the evidence:** Collect data\n\n. . .\n\n-   **Judge the evidence:** \"Could these data plausibly have happened by chance if the null hypothesis were true?\"\n    -   Yes: Fail to reject $H_0$\n    -   No: Reject $H_0$\n\n## Hypothesis testing framework\n\n::: incremental\n-   Start with a null hypothesis, $H_0$, that represents the status quo\n-   Set an alternative hypothesis, $H_A$, that represents the research question, i.e. what we're testing for\n-   Conduct a hypothesis test under the assumption that the null hypothesis is true and calculate a **p-value** (probability of observed or more extreme outcome given that the null hypothesis is true)\n    -   if the test results suggest that the data do not provide convincing evidence for the alternative hypothesis, stick with the null hypothesis\n    -   if they do, then reject the null hypothesis in favor of the alternative\n:::\n\n## Setting the hypotheses\n\n::: task\nThe consultant claims that her complication rate is lower than the US average of 10%. Which of the following is the correct set of hypotheses for evaluating her claim?\n:::\n\n(a) $H_0: p = 0.10$; $H_A: p \\ne 0.10$ <br>\n\n(b) $H_0: p = 0.10$; $H_A: p > 0.10$ <br>\n\n(c) $H_0: p = 0.10$; $H_A: p < 0.10$ <br>\n\n(d) $H_0: \\hat{p} = 0.10$; $H_A: \\hat{p} \\ne 0.10$ <br>\n\n(e) $H_0: \\hat{p} = 0.10$; $H_A: \\hat{p} > 0.10$ <br>\n\n(f) $H_0: \\hat{p} = 0.10$; $H_A: \\hat{p} < 0.10$\n\n## Simulating the null distribution\n\nSince $H_0: p = 0.10$, we need to simulate a null distribution where the probability of success (complication) for each trial (patient) is 0.10.\n\n. . .\n\n<br>\n\n::: task\nDescribe how you would simulate the null distribution for this study using a bag of chips. How many chips? What colors? What do the colors indicate? How many draws? **With replacement** or **without replacement**?\n:::\n\n## What do we expect?\n\n::: task\nWhen sampling from the null distribution, what is the expected proportion of success (complications)?\n:::\n\n## Simulation #1\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nsim1\n   complication no complication \n              7              55 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1129032\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](12-hypothesis-testing-randomization_files/figure-html/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n\n\n## Simulation #2\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nsim2\n   complication no complication \n             10              52 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1612903\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](12-hypothesis-testing-randomization_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n\n## Simulation #3\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nsim3\n   complication no complication \n              5              57 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.08064516\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](12-hypothesis-testing-randomization_files/figure-html/unnamed-chunk-5-1.png){width=768}\n:::\n:::\n\n\n\n## This is getting boring...\n\nWe need a way to automate this process!\n\n## Application exercise\n\nGo to Posit Cloud and continue the project titled `ae-10-Donor Yawner`.\n\n# Case study 2: Yawners\n\n## Is yawning contagious?\n\n::: task\nDo you think yawning is contagious?\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/yawn1.png){fig-alt=\"Only Charlie Brown yawning\" fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n![](images/yawn2.png){fig-alt=\"Both Charlie Brown and Lucy van Pelt yawning\" fig-align=\"center\"}\n:::\n:::\n\n## Is yawning contagious?\n\nAn experiment conducted by the [MythBusters](https://en.wikipedia.org/wiki/MythBusters) tested if a person can be subconsciously influenced into yawning if another person near them yawns.\n\nIf you're interested, you can watch the full episode at <https://www.dailymotion.com/video/x7ydkt2>.\n\n## Study description\n\nIn this study 50 people were randomly assigned to two groups: 34 to a group where a person near them yawned (treatment) and 16 to a control group where they didn't see someone yawn (control).\n\nThe data are in the **openintro** package: `yawn`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyawn |>\n  count(group, result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  group result       n\n  <fct> <fct>    <int>\n1 ctrl  not yawn    12\n2 ctrl  yawn         4\n3 trmt  not yawn    24\n4 trmt  yawn        10\n```\n\n\n:::\n:::\n\n\n\n## Proportion of yawners\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nyawn |>\n  count(group, result) |>\n  group_by(group) |>\n  mutate(p_hat = n / sum(n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n# Groups:   group [2]\n  group result       n p_hat\n  <fct> <fct>    <int> <dbl>\n1 ctrl  not yawn    12 0.75 \n2 ctrl  yawn         4 0.25 \n3 trmt  not yawn    24 0.706\n4 trmt  yawn        10 0.294\n```\n\n\n:::\n:::\n\n\n\n-   Proportion of yawners in the treatment group: $\\frac{10}{34} = 0.2941$\n-   Proportion of yawners in the control group: $\\frac{4}{16} = 0.25$\n-   Difference: $0.2941 - 0.25 = 0.0441$\n-   Our results match the ones calculated on the MythBusters episode.\n\n## Independence?\n\n::: task\nBased on the proportions we calculated, do you think yawning is really contagious, i.e. are seeing someone yawn and yawning dependent?\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 4\n# Groups:   group [2]\n  group result       n p_hat\n  <fct> <fct>    <int> <dbl>\n1 ctrl  not yawn    12 0.75 \n2 ctrl  yawn         4 0.25 \n3 trmt  not yawn    24 0.706\n4 trmt  yawn        10 0.294\n```\n\n\n:::\n:::\n\n\n\n## Dependence, or another possible explanation?\n\n::: incremental\n-   The observed differences might suggest that yawning is contagious, i.e. seeing someone yawn and yawning are dependent.\n-   But the differences are small enough that we might wonder if they might simple be **due to chance**.\n-   Perhaps if we were to repeat the experiment, we would see slightly different results.\n-   So we will do just that - well, somewhat - and see what happens.\n-   Instead of actually conducting the experiment many times, we will **simulate** our results.\n:::\n\n## Two competing claims\n\n::: columns\n::: {.column width=\"50%\"}\n**Null hypothesis:**\n\n\"There is nothing going on.\" Yawning and seeing someone yawn are **independent**, yawning is not contagious, observed difference in proportions is simply due to chance.\n:::\n\n::: {.column width=\"50%\"}\n**Alternative hypothesis:**\n\n\"There is something going on.\" Yawning and seeing someone yawn are **dependent**, yawning is contagious, observed difference in proportions is not due to chance.\n:::\n:::\n\n## Simulation by hand - setup\n\n1.  A regular deck of cards is comprised of 52 cards: 4 aces, 4 of numbers 2-10, 4 jacks, 4 queens, and 4 kings.\n\n2.  Take out two aces from the deck of cards and set them aside.\n\n3.  The remaining 50 playing cards to represent each participant in the study:\n\n    -   14 face cards (including the 2 aces) represent the people who yawn.\n    -   36 non-face cards represent the people who don't yawn.\n\n## Simulation by hand - running\n\n1.  Shuffle the 50 cards at least 7 times<sup>1</sup> to ensure that the cards counted out are from a random process.\n\n2.  Count out the top 16 cards and set them aside. These cards represent the people in the control group.\n\n3.  Out of the remaining 34 cards (treatment group) count the **number of face cards** (the number of people who yawned in the treatment group).\n\n4.  Calculate the difference in proportions of yawners (treatment - control), and plot it on the board.\n\n5.  Mark the difference you find on the dot plot on the board.\n\n::: aside\n\\[1\\] http://www.dartmouth.edu/\\~chance/course/topics/winning_number.html\n:::\n\n## Simulation by computation\n\nGo to Posit Cloud and continue the project titled `ae-10-Donor Yawner`.\n\n# Recap\n\n## Types of alternative hypotheses\n\n-   One-sided (one-tailed) alternatives: The parameter is hypothesized to be less than or greater than the null value, \\< or \\>\n\n. . .\n\n-   Two-sided (two-tailed) alternatives: The parameter is hypothesized to be not equal to the null value, $\\ne$\n    -   Calculated as two times the tail area beyond the observed sample statistic\n    -   More objective, and hence more widely preferred\n\n. . .\n\n::: task\nAverage systolic blood pressure of people with Stage 1 Hypertension is 150 mm Hg. Suppose we want to use a hypothesis test to evaluate whether a new blood pressure medication has <b>an effect</b> on the average blood pressure of heart patients. What are the hypotheses?\n:::\n\n## Discernability level\n\nWe often use 5% as the cutoff for whether the p-value is low enough that the data are unlikely to have come from the null model. This cutoff value is called the **discernability level**, $\\alpha$.\n\n-   If p-value \\< $\\alpha$, reject $H_0$ in favor of $H_A$: The data provide convincing evidence for the alternative hypothesis.\n\n-   If p-value \\> $\\alpha$, fail to reject $H_0$ in favor of $H_A$: The data do not provide convincing evidence for the alternative hypothesis.\n\n## Statistically discernable\n\n-   If you've taken a statistics course before, or read papers that use hypothesis testing for making a conclusion, you might have encountered the term \"statistically significant\" or \"significance level\".\n\n-   We will use the term \"statistically discernable\" or discernability level\", because \"significant\" has a different meaning in everyday language and this often causes misconceptions of what \"statistically significant\" means. It doesn't necessarily mean a notable or important event has happened, it just means the data are unlikely to have come from the null model.\n\n## Setting a seed\n\n-   Goal: Pin down the random generation so that the same random generation happens each time a document is rendered (by you or by someone else wanting to replicate your results)\n\n-   When: Set a seed each time right before `generate()`ing new resamples. Setting a seed once in a document would also work for re-rendering the document, but considering we often run the code chunk interactively, it's best to set the seed again in each code chunk that does random generation.\n",
    "supporting": [
      "12-hypothesis-testing-randomization_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}