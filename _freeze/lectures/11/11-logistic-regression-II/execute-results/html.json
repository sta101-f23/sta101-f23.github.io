{
  "hash": "24b2da8a1937bc988577810eb8840460",
  "result": {
    "markdown": "---\ntitle: Logistic regression\nsubtitle: Lecture 10\nformat: revealjs\nauto-stretch: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Warm up\n\n## Check-in\n\n-   Daily check-ins for getting you thinking at the beginning of the class and reviewing recent/important concepts\n-   Go to Canvas and open today's \"quiz\" titled `2023-10-11 Check-in`\n-   Access code: `___` (released in class) <!-- logit -->\n-   \"Graded\" for completion\n\n## Project\n\n::: task\nAny questions about projects?\n:::\n\n# From last time\n\n## Application exercise\n\nGo to Posit Cloud and continue the project titled `ae-09-Spam`.\n\n::: callout-note\n## ICYMI\n\nToday's daily check-in access code: `___` (released in class) <!-- logit -->\n:::\n\n# Logistic regression\n\n## The model\n\nLogit form:\n\n$$\nlog(\\frac{p}{1 - p}) = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + ...\n$$\n\nProbability form:\n\n$$\np = \\frac{e^{\\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + ...}}{1 + e^{\\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + ...}}\n$$\n\n## Data + packages {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nhp_spam <- read_csv(\"data/hp-spam.csv\") |>\n  mutate(type = as.factor(type))\n\nhp_spam |>\n  select(type, you, capitalTotal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4,601 × 3\n   type    you capitalTotal\n   <fct> <dbl>        <dbl>\n 1 1      1.93          278\n 2 1      3.47         1028\n 3 1      1.36         2259\n 4 1      3.18          191\n 5 1      3.18          191\n 6 1      0              54\n 7 1      3.85          112\n 8 1      0              49\n 9 1      1.23         1257\n10 1      1.67          749\n# ℹ 4,591 more rows\n```\n\n\n:::\n:::\n\n\n## Fit model and display output\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspam_fit <- logistic_reg() |>\n  fit(type ~ you + capitalTotal, data = hp_spam)\n  \ntidy(spam_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term         estimate std.error statistic   p.value\n  <chr>           <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  -1.50     0.0554       -27.1 2.97e-162\n2 you           0.361    0.0198        18.3 1.84e- 74\n3 capitalTotal  0.00173  0.000104      16.6 5.66e- 62\n```\n\n\n:::\n:::\n\n\n## The model\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term         estimate std.error statistic   p.value\n  <chr>           <dbl>     <dbl>     <dbl>     <dbl>\n1 (Intercept)  -1.50     0.0554       -27.1 2.97e-162\n2 you           0.361    0.0198        18.3 1.84e- 74\n3 capitalTotal  0.00173  0.000104      16.6 5.66e- 62\n```\n\n\n:::\n:::\n\n\n$$\nlog(\\frac{p}{1 - p}) = -1.50 + 0.361 \\times you + 0.00173 \\times  capitalTotal + \\epsilon\n$$\n\n$$\nlog(\\frac{\\hat{p}}{1 - \\hat{p}}) = -1.50 + 0.361 \\times you + 0.00173 \\times  capitalTotal\n$$\n\nwhere $p$ is the probability\n\n# Exam 1\n\n## Exam 1\n\n-   Tally your points on your in class exams and confirm my totals or let me know **now** if anything is off\n\n-   Regrade request policy: <https://sta101-f23.github.io/course-syllabus.html#regrade-requests>\n\n-   Modeling question $\\rightarrow$ extra credit question on Exam 2 addressing the same learning goals\n\n-   Statistics!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}