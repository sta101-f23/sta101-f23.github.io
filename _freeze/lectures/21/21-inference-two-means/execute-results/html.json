{
  "hash": "d9ea3aeeb0de30fced0f67ce0579abc5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Inference two means\"\nsubtitle: Lecture 21\nformat: revealjs\nauto-stretch: false\n---\n\n\n# Warm up\n\n## Announcements\n\n-   Project 2:\n    -   Assignment details + teams posted\n    -   All team members must be in lab on Friday for the proposal conversation with your TA (5 pts / 100 total points for the project)\n    -   Before Friday: Meet with your team at least once to decide on a dataset and research question\n    -   Wednesday in class: Last 20-30 minutes dedicated to project work\n-   Lab 8:\n    -   To be posted by Friday\n    -   Optional submission: If you submit, it will be considered as part of your grade. If you don't, your HW grade will be calculated out of 7 labs. Either way, lowest score will be dropped.\n\n# Inference for comparing two means\n\n## Today's focus\n\n-   Inference for comparing two population means\n\n-   Specifically, making decisions via hypothesis tests\n\n-   And generally, **what in the world is a hypothesis test?!**\n\n    -   Why is it conducted?\n\n    -   How is it conducted?\n\n    -   What does the p-value mean?\n\n    -   What does it mean to reject or fail to reject a null hypothesis?\n\n    -   What are testing errors?\n\n    -   What is the power of the test?\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openintro)\nlibrary(tidymodels)\nlibrary(ggthemes)\n```\n:::\n\n\n## Randomization test for comparing two means {.smaller}\n\n::: incremental\n1.  Combine the data from the two groups and randomly shuffle them into two groups of sizes equal to the original group sample sizes\n\n2.  Calculate the means of each group and record the different\n\n3.  Repeat steps 1 and 2 many times to build the null distribution\n\n4.  Find the p-value as the number of simulations with simulated differences at least as extreme (in the direction of the alternative hypothesis) as the observed difference\n:::\n\n## Case study: Birth weights of babies and smoking {.smaller}\n\n::: task\nEvery year, the United States Department of Health and Human Services releases to the public a large dataset containing information on births recorded in the country. This dataset has been of interest to medical researchers who are studying the relation between habits and practices of expectant mothers and the birth of their children. In this case study we work with a random sample of 1,000 cases from the dataset released in 2014. The distributions of birth weights of babies, measured in pounds, by mother's smoking habit are shown below.\n:::\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nopenintro::births14 |>\n  drop_na(habit) |>\n  ggplot(aes(x = weight, color = habit, fill = habit)) +\n  geom_density(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](21-inference-two-means_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## Application exercise\n\nGo to Posit Cloud and continue the project titled `ae-16-Birth weights`.\n",
    "supporting": [
      "21-inference-two-means_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}