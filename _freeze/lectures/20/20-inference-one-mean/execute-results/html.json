{
  "hash": "57775449c3d07ee86c1a616445b6531f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Inference one mean\"\nsubtitle: Lecture 20\nformat: revealjs\nauto-stretch: false\n---\n\n\n# Warm up\n\n## Announcements\n\n-   ...\n\n# Inference for one mean\n\n## Today's focus\n\n-   Inference for a population mean\n\n-   Specifically, estimating a population mean via a confidence interval\n\n-   And generally, **what in the world is a confidence interval?!**\n\n    -   Why is it constructed?\n\n    -   How is it constructed?\n\n    -   What do the bounds of a confidence interval mean?\n\n    -   What does the confidence level mean?\n\n    -   What is the margin of error?\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(openintro)\nlibrary(tidymodels)\n```\n:::\n\n\n## Bootstrap confidence interval for the mean {.smaller}\n\n::: incremental\n1.  Take a bootstrap sample (sample with replacement) of size n (the original sample size) from the original sample\n\n2.  Record the mean\n\n3.  Repeat steps 1 and 2 many times to build the bootstrap distribution\n\n4.  Find the bootstrap confidence interval using one of two methods:\n\n    -   Percentile method: The bounds of the middle X% of the bootstrap distribution comprise the X% bootstrap interval.\n\n    -   Standard error method:\n\n        -   Calculate the standard error for the bootstrap distribution\n\n        -   Find the critical value associated with the X% confidence interval\n\n        -   Calculate the **margin of error** (ME) as the critical value $\\times$ standard error\n\n        -   Construct the confidence interval a the original sample mean $\\pm$ ME\n:::\n\n## Case study: Length of gestation {.smaller}\n\n::: task\nEvery year, the United States Department of Health and Human Services releases to the public a large dataset containing information on births recorded in the country. This dataset has been of interest to medical researchers who are studying the relation between habits and practices of expectant mothers and the birth of their children. In this case study we work with a random sample of 1,000 cases from the dataset released in 2014. The length of pregnancy, measured in weeks, is commonly referred to as gestation. The histogram below shows the distribution of lengths of gestation from the random sample of 1,000 births.\n:::\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(\n  openintro::births14, \n  aes(x = weeks)\n  ) +\n  geom_histogram(binwidth = 1) +\n  labs(\n    x = \"Gestation (weeks)\",\n    y = \"Count\",\n    title = \"Random sample of 1,000 births\"\n  )\n```\n\n::: {.cell-output-display}\n![](20-inference-one-mean_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## CS: Length of gestation - `boot_dist`\n\n::: task\nThe distribution of bootstrapped means of gestation from 1,500 different bootstrap samples.\n:::\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nset.seed(1234)\n\nboot_dist <- births14 |>\n  specify(response = weeks) |>\n  generate(\n    reps = 1000, \n    type = \"bootstrap\"\n  ) |>\n  calculate(stat = \"mean\")\n\nvisualize(boot_dist)\n```\n\n::: {.cell-output-display}\n![](20-inference-one-mean_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## CS: Length of gestation - percentile interval\n\n::: task\nWhat does the following code do? How do you adjust it to change the confidence level?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboot_dist |>\n  get_ci()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  lower_ci upper_ci\n     <dbl>    <dbl>\n1     38.5     38.8\n```\n\n\n:::\n:::\n\n\n## CS: Length of gestation - standard error interval {.smaller}\n\n::: task\nWhat does the following code do? Why do we need to provide `point_estimate`?\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobs_stat <- births14 |>\n  specify(response = weeks) |>\n  calculate(stat = \"mean\")\n\nobs_stat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nResponse: weeks (numeric)\n# A tibble: 1 × 1\n   stat\n  <dbl>\n1  38.7\n```\n\n\n:::\n\n```{.r .cell-code}\nboot_dist |>\n  get_ci(\n    type = \"se\",\n    point_estimate = obs_stat\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  lower_ci upper_ci\n     <dbl>    <dbl>\n1     38.5     38.8\n```\n\n\n:::\n:::\n\n\n## Interpretations\n\n-   The interval:\n\n    > We are X% confident that the true population mean is within out confidence interval.\n\n-   The confidence level:\n\n    ::: task\n    What does 95% confidence interval mean?\n    :::\n\n## Application exercise\n\nGo to Posit Cloud and continue the project titled `ae-15-Gestation`.\n",
    "supporting": [
      "20-inference-one-mean_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}